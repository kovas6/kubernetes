name: Deploy Terraform and Kubernetes Setup

on:
  push:
    branches:
      - main

jobs:
  terraform:
    name: 'Terraform Apply and Kubernetes Setup'
    runs-on: ubuntu-latest

    env:
      GOOGLE_APPLICATION_CREDENTIALS: ${{ github.workspace }}/gcp-key.json

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Write GCP credentials to file
        run: echo '${{ secrets.GCP_CREDENTIALS_JSON }}' > $GOOGLE_APPLICATION_CREDENTIALS

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: terraform/dev
        run: terraform init

      - name: Terraform Plan
        working-directory: terraform/dev
        run: terraform plan

      - name: Terraform Apply
        working-directory: terraform/dev
        run: terraform apply -auto-approve

      - name: Extract Terraform Outputs
        id: tf_outputs
        working-directory: terraform/dev
        run: |
          echo "project_id=$(terraform output -raw project_id)" >> $GITHUB_ENV
          echo "cluster_name=$(terraform output -raw cluster_name)" >> $GITHUB_ENV
          echo "region=$(terraform output -raw region)" >> $GITHUB_ENV
          echo "zone=$(terraform output -raw zone)" >> $GITHUB_ENV

      - name: Set up gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticate gcloud
        run: gcloud auth activate-service-account --key-file=$GOOGLE_APPLICATION_CREDENTIALS

      - name: Get GKE Credentials
        run: |
          gcloud container clusters get-credentials ${{ env.cluster_name }} \
            --zone ${{ env.zone }} \
            --project ${{ env.project_id }}

      # You can add kubectl steps here, like applying network policies, etc.
      # - name: Apply network policy
      #   run: kubectl apply -f kubernetes/network/network-policy.yaml
